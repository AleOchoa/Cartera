{"version":3,"sources":["services/index.js","context.js","pages/Login.js","pages/admin/Usuarios.js","components/404/NotFound.js","components/Navbar.js","pages/mesa/Contratos.js","pages/mesa/Clientes.js","pages/mesa/DetalleContrato.js","Router.js","serviceWorker.js","theme.js","index.js"],"names":["baseURL","service","axios","create","withCredentials","MY_SERVICE","test","a","get","signup","user","post","login","logOut","feedAll","users","clients","contracts","data","contratos","clientes","feedUsers","feedClients","feedContracts","deleteUser","id","delete","msg","editUser","form","patch","changeStatus","createContract","contrato","editContract","contract","deleteContract","createClient","client","cliente","editClient","deleteClient","MyContext","createContext","MyProvider","state","edita","nuevo","formSignup","name","email","formLogin","password","loggedUser","isLogged","isOpen","formUsuario","rol","formContrato","idcliente","monto","plazo","tasa","fechaInicio","diaPago","estatus","formCliente","numCliente","nombre","apellidoPaterno","apellidoMaterno","rfc","fechaNacimiento","genero","curp","calle","ext","int","colonia","delegacion","ciudad","estado","cp","allUsers","allContracts","allClients","feed","isAdmin","contratoDetalle","handleInput","e","obj","target","value","Obj","setState","handleChange","onClose","SERVICE","restorePassword","preventDefault","showEditUser","_id","showNuevo","handleLogout","props","history","push","handleSignupSubmit","then","catch","err","handleLoginSubmit","isActive","finally","showEditClient","showEditContract","showDetailContract","fechaCorta","fechaPrimerPago","substring","fechaPrimerPagoCorto","console","log","this","Provider","children","Component","withRouter","Login","toast","useToast","context","useContext","submit","title","description","status","duration","isClosable","Consumer","Box","as","onSubmit","marginTop","display","h","justifyContent","w","p","color","Stack","width","minWidth","Heading","InputGroup","backgroundColor","Icon","Input","onChange","type","roundedLeft","placeholder","isRequired","rounded","Button","alignSelf","size","Usuarios","useEffect","submitUser","position","showEdit","Flex","direction","alignItems","onClick","FaUser","Select","flexDir","maxWidth","List","SimpleGrid","columns","Text","gridColumn","map","key","margin","icon","MdBlock","isTruncated","Link","MdEdit","MdVpnKey","NotFound","go","path","pos","top","zIndex","align","justify","Image","src","Menu","IconButton","variant","variantColor","aria-label","TiThMenu","border","Contratos","submitContract","showDetail","indx","flexDirection","height","numeroContrato","mensualidad","FaPlusCircle","Clientes","submitClient","DetalleContrato","wrap","tablaOriginal","el","pago","fechaExigibilidad","saldoInicial","capital","interes","ivaInteres","saldoFinal","Router","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","customIcons","menu","fill","d","viewBox","customTheme","theme","icons","colors","hotpink","softpink","whity","ReactDOM","render","ThemeProvider","CSSReset","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.037c7b0d.chunk.js","sourcesContent":["import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  ? (baseURL = 'https://carteraemisha.herokuapp.com')\n  : (baseURL = 'http://localhost:3000');\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nconst MY_SERVICE = {\n  test: async () => {\n    return await service.get('/');\n  },\n  signup: async (user) => {\n    return await service.post('/signup', user);\n  },\n  login: async (user) => {\n    return await service.post('/login', user);\n  },\n  logOut: async () => {\n    return await service.get('/logout');\n  },\n//Carga información\n  feedAll: async()=>{\n    const users= await service.get('/usuarios')\n    const clients= await service.get('/cliente')\n    const contracts= await service.get('/contrato')\n    return {users:users.data.users,contracts:contracts.data.contratos,clients:clients.data.clientes}\n  },\n  feedUsers: async()=>{\n    const users= await service.get('/usuarios')\n    return {users:users.data.users}\n  },\n  feedClients: async()=>{\n    const clients= await service.get('/cliente')\n    return {clients:clients.data.clientes}\n  },\n  feedContracts: async()=>{\n    const contracts= await service.get('/contrato')\n    return {contracts:contracts.data.contratos}\n  },\n//CRUD Usuario\n  deleteUser: async(id)=>{\n    const msg=await service.delete(`/borraUsuario/${id}`)\n    return {msg}\n  },\n  editUser:async (id,form)=>{\n    const user=await service.patch(`/editaUsuario/${id}`,form)\n    return {user}\n  },\n  changeStatus:async (id)=>{\n    const user=await service.patch(`/cambiaEstatus/${id}`)\n    return{user}\n  },\n//CRUD Contrato\n  createContract:async (form)=>{\n    const contrato=await service.post('/contrato/crea',form)\n    return{contrato}\n  },\n  editContract:async (id,form) => {\n    const contract=await service.patch(`/contrato/edita/${id}`,form)\n    return {contract}\n  },\n  deleteContract:async (id)=>{\n    const msg=await service.delete(`/contrato/borra/${id}`)\n    return {msg}\n  },\n//CRUD Cliente\n  createClient:async (form)=>{\n    const client=await service.post('/cliente/crea',form)\n    return{cliente:client.data.cliente}\n  },\n  editClient:async (id,form) => {\n    const cliente=await service.patch(`/cliente/edita/${id}`,form)\n    return {cliente}\n  },\n  deleteClient:async (id)=>{\n    const msg=await service.delete(`/cliente/borra/${id}`)\n    return {msg}\n  }\n\n};\n\nexport default MY_SERVICE;\n","import React, {\n  createContext,\n  Component\n} from 'react'\nimport {\n  withRouter\n} from 'react-router-dom'\nimport SERVICE from './services/index'\n//import axios from 'axios'\n\nexport const MyContext = createContext()\n\nclass MyProvider extends Component {\n  state = {\n    edita:false,\n    nuevo:false,\n    formSignup: {\n      name: '',\n      email: ''\n    },\n    formLogin: {\n      email: '',\n      password: ''\n    },\n    loggedUser: null,\n    isLogged: false,\n    isOpen: false,\n    formUsuario: {\n      id:\"\",\n      name:\"\",\n      email:\"\",\n      rol:\"\"\n    },\n    formContrato: {\n      id:\"\",\n      idcliente:\"\",\n      monto:0,\n      plazo:0,\n      tasa:0,\n      fechaInicio:\"\",\n      diaPago:0,\n      estatus:\"\"\n    },\n    formCliente:{\n      id:\"\",\n      numCliente:\"\",\n      nombre:\"\",\n      apellidoPaterno:\"\",\n      apellidoMaterno:\"\",\n      rfc:\"\",\n      fechaNacimiento:\"\",\n      genero:\"\",\n      curp:\"\",\n      calle:\"\",\n      ext:\"\",\n      int:\"\",\n      colonia:\"\",\n      delegacion:\"\",\n      ciudad:\"\",\n      estado:\"\",\n      cp:\"\"\n    },\n    allUsers: null,\n    allContracts: null,\n    allClients: null,\n    feed: false,\n    isAdmin:false,\n    contratoDetalle:null\n  }\n\n  handleInput = (e, obj) => {\n    const {\n      name,\n      value\n    } = e.target\n    let Obj = this.state[obj]\n    Obj[name] = value\n    this.setState({\n      Obj\n    })\n  }\n  handleChange=(e,obj)=> {\n    const {\n      name,\n      value\n    } = e.target\n    let Obj = this.state[obj]\n    Obj[name] = value\n    this.setState({\n      Obj\n    })\n  }\n\n  async componentDidMount() {\n    const data = await SERVICE.feedAll()\n    this.setState({\n      feed: true,\n      allUsers: data.users,\n      allContracts: data.contracts,\n      allClients: data.clients\n    })\n  }\n\n  onClose = () => {\n    this.setState({\n      isOpen: false\n    })\n  }\n  deleteUser = async (e, id) => {\n    await SERVICE.deleteUser(id)\n    const data = await SERVICE.feedUsers()\n    this.setState({\n      allUsers: data.users\n    })\n  }\n  restorePassword = async (e, id) => {\n    await SERVICE.restorePassword(id)\n    const data = await SERVICE.feedUsers()\n    this.setState({\n      allUsers: data.users\n    })\n  }\n  changeStatus = async (e, id) => {\n    await SERVICE.changeStatus(id)\n    const data = await SERVICE.feedUsers()\n    this.setState({\n      allUsers: data.users\n    })\n  }\n  editUser = async (e, id) => {\n    e.preventDefault()\n    await SERVICE.editUser(id,this.state.formUsuario)\n    const data = await SERVICE.feedUsers()\n    const form= {\n      id:\"\",\n      name:\"\",\n      email:\"\",\n      rol:\"\"\n    }\n    this.setState({\n      formUsuario:form,\n      edita: false,\n      allUsers: data.users\n    })\n  }\n  showEditUser = async(e,user) => {\n    const form={\n      id:user._id,\n      name:user.name,\n      email:user.email,\n      rol:user.rol\n    }\n    this.setState({\n      edita: true,\n      formUsuario:form\n    })\n  }\n  showNuevo = async(e) => {\n    this.setState({\n      nuevo: true\n    })\n  }\n\n  handleLogout = async () => {\n    await SERVICE.logOut()\n    this.props.history.push('/')\n    this.setState({\n      loggedUser: null,\n      isLogged: false,\n      isAdmin:false\n    })\n  }\n  handleSignupSubmit = async e => {\n    e.preventDefault()\n    const form = this.state.formSignup\n    this.setState({\n      formSignup: {\n        name: '',\n        email: ''\n      },\n      nuevo:false\n    })\n    return await SERVICE.signup(form)\n      .then(async ({\n        data\n      }) => {\n        const {\n          users\n        } = await SERVICE.feedUsers()\n        this.setState({\n          allUsers: users\n        })\n        return {\n          user: data.user,\n          msg: \"Se ha mandado un correo al usuario.\"\n        }\n      })\n      .catch(({\n        err\n      }) => {\n        return {\n          user: null,\n          msg: \"La cuenta ya existe.\"\n        }\n      })\n  }\n\n  handleLoginSubmit = e => {\n    e.preventDefault()\n    const form = this.state.formLogin\n    return SERVICE.login(form)\n      .then(({\n        data\n      }) => {\n        if (data.user.isActive) {\n          this.setState({\n            loggedUser: data.user,\n            isLogged: true\n          })\n          if (data.user.rol==='Admin') {this.setState({isAdmin:true})}\n          return {\n            user: data.user,\n            msg: 'Login realizado.'\n        }}\n        else {\n        return {\n          user: null,\n          msg: 'Usuario inactivo.'\n        }}\n      })\n      .catch(err => {\n        this.setState({\n          loggedUser: null,\n          isLogged: false,\n          formLogin: {\n            email: '',\n            password: ''\n          }\n        })\n        return {\n          user: null,\n          msg: 'Email/contraseña inválidos.'\n        }\n      })\n      .finally(() => this.setState({\n        formLogin: {\n          email: '',\n          password: ''\n        }\n      }))\n  }\n\n\n///Cliente\n  createClient=async e =>{\n    e.preventDefault()\n    const form=this.state.formCliente\n    this.setState({\n      formCliente:{\n        id:\"\",\n        nombre:\"\",\n        apellidoPaterno:\"\",\n        apellidoMaterno:\"\",\n        rfc:\"\",\n        fechaNacimiento:\"\",\n        numCliente:\"\",\n        genero:\"\",\n        curp:\"\",\n        calle:\"\",\n        ext:\"\",\n        int:\"\",\n        colonia:\"\",\n        delegacion:\"\",\n        ciudad:\"\",\n        estado:\"\",\n        cp:\"\"\n      },\n      nuevo:false\n    })\n    return await SERVICE.createClient(form)\n      .then(async (data)=>{\n        const {clients}=await SERVICE.feedClients()\n        this.setState({allClients: clients})\n        return {\n          client: data.cliente,\n          msg: \"Se ha agregado el cliente.\"\n        }\n      })\n      .catch(({\n        err\n      }) => {\n        return {\n          client: null,\n          msg: err\n        }\n      })\n    }\n    showEditClient= async(e,cliente) => {\n      const form={\n        id:cliente._id,\n        nombre:cliente.nombre,\n        apellidoPaterno:cliente.apellidoPaterno,\n        apellidoMaterno:cliente.apellidoMaterno,\n        rfc:cliente.rfc,\n        numCliente:cliente.numCliente,\n        genero:cliente.genero,\n        curp:cliente.curp,\n      }\n      this.setState({\n        edita: true,\n        formCliente:form\n      })\n    }\n    deleteClient = async (e, id) => {\n      await SERVICE.deleteClient(id)\n      const data = await SERVICE.feedClients()\n      this.setState({\n        allClients: data.clients\n      })\n    }\n    editClient = async (e, id) => {\n      e.preventDefault()\n      await SERVICE.editClient(id,this.state.formCliente)\n      const data = await SERVICE.feedClients()\n      const form= {\n        id:\"\",\n        numCliente:\"\",\n        nombre:\"\",\n        apellidoPaterno:\"\",\n        apellidoMaterno:\"\",\n        rfc:\"\",\n        fechaNacimiento:\"\",\n        genero:\"\",\n        curp:\"\",\n        calle:\"\",\n        ext:\"\",\n        int:\"\",\n        colonia:\"\",\n        delegacion:\"\",\n        ciudad:\"\",\n        estado:\"\",\n        cp:\"\"\n      }\n      this.setState({\n        formCliente:form,\n        edita: false,\n        allClients: data.clients\n      })\n    }\n\n///Contrato\n  createContract = async e=>{\n    e.preventDefault()\n    const form=this.state.formContrato\n    this.setState({\n      formContrato: {\n        idcliente:\"\",\n        monto:\"\",\n        plazo:\"\",\n        tasa:\"\",\n        fechaInicio:\"\",\n        diaPago:\"\",\n        estatus:\"\"\n      },\n      nuevo:false\n    })\n    return await SERVICE.createContract(form)\n      .then(async (\n        data\n      ) => {\n        const {\n          contracts\n        } = await SERVICE.feedContracts()\n        this.setState({\n          allContracts: contracts\n        })\n        const contrato=data.contrato.data.contrato\n        return {\n          contract: contrato,\n          msg: \"Se ha generado el contrato.\"\n        }\n      })\n      .catch(({\n        err\n      }) => {\n        return {\n          contract: null,\n          msg: \"No se pudo crear el contrato.\"\n        }\n      })\n  }\n  showEditContract = async(e,contract) => {\n    const form={\n      id:contract._id,\n      idcliente:\"\",\n      monto:contract.monto,\n      plazo:contract.plazo,\n      tasa:contract.tasa,\n      fechaInicio:\"\",\n      diaPago:contract.diaPago,\n      estatus:contract.estatus\n    }\n    this.setState({\n      edita: true,\n      formContrato:form\n    })\n  }\n  editContract = async (e, id) => {\n    e.preventDefault()\n    await SERVICE.editContract(id,this.state.formContrato)\n    const data = await SERVICE.feedContracts()\n    const form= {\n      id:\"\",\n      idcliente:\"\",\n      monto:\"\",\n      plazo:\"\",\n      tasa:\"\",\n      cliente:\"\",\n      fechaInicio:\"\",\n      diaPago:\"\",\n      estatus:\"\"\n    }\n    this.setState({\n      formContrato:form,\n      edita: false,\n      allContracts: data.contracts\n    })\n  }\n  deleteContract = async (e, id) => {\n    await SERVICE.deleteContract(id)\n    const data = await SERVICE.feedContracts()\n    this.setState({\n      allContracts: data.contracts\n    })\n  }\n  showDetailContract= (e,contract)=>{\n    const fechaCorta=contract.fechaPrimerPago.substring(0,10)\n    this.setState({contratoDetalle:{...contract,fechaPrimerPagoCorto:fechaCorta}})\n    console.log(contract)\n\n    this.props.history.push('/detalleContrato')\n  }\n  \n\n  render() {\n    const {\n      state,\n      handleInput,\n      handleSignupSubmit,\n      handleLoginSubmit,\n      handleLogout,\n      onClose,\n      deleteUser,\n      restorePassword,\n      changeStatus,\n      editUser,\n      showEditUser,\n      handleChange,\n      showNuevo,\n      createContract,\n      showEditContract,\n      deleteContract,\n      editContract,\n      showDetailContract,\n      createClient,\n      showEditClient,\n      deleteClient,\n      editClient\n    } = this\n    return ( <MyContext.Provider value = {\n      {\n        state,\n        handleInput,\n        handleSignupSubmit,\n        handleLoginSubmit,\n        handleLogout,\n        onClose,\n        deleteUser,\n        restorePassword,\n        changeStatus,\n        editUser,\n        showEditUser,\n        handleChange,\n        showNuevo,\n        createContract,\n        showEditContract,\n        deleteContract,\n        editContract,\n        showDetailContract,\n        createClient,\n        showEditClient,\n        deleteClient,\n        editClient\n      }\n    } > {\n      this.props.children\n    } </MyContext.Provider>)\n  }\n}\n\nexport default withRouter(MyProvider)","import React, {useContext} from 'react';\nimport {Box,Heading,Button,Stack,InputGroup,InputLeftAddon,Input,Icon,useToast } from \"@chakra-ui/core\";\nimport {MyContext} from '../context'\n\nexport default function Login({ history }) {\n  const toast = useToast()\n  const context = useContext(MyContext)\n\n  const submit = async (e) => {\n    const { user, msg } = await context.handleLoginSubmit(e)\n    if (user) {\n      history.push('/contratos')\n    } else {\n      toast({\n        title: 'Revisa tus credenciales.',\n        description: msg,\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      })\n    }\n  }\n  return (\n    <MyContext.Consumer>\n      {context => {\n        return (\n          <>\n            <Box as=\"form\" onSubmit={submit} marginTop=\"10vh\" display=\"flex\" h=\"60%\" justifyContent=\"center\" w=\"100%\" p={4} color=\"white\">\n              <Stack width=\"40%\" minWidth=\"300px\" >\n                <Heading as=\"h2\" color=\"teal.700\">Ingresa a tu cuenta</Heading>\n                <InputGroup>\n                  <InputLeftAddon backgroundColor=\"teal.100\" children={<Icon name=\"email\" color=\"teal.700\" />}/>\n                  <Input name=\"email\" value={context.state.formLogin.email} onChange={(e) => context.handleInput(e, 'formLogin')} color=\"teal.700\" type=\"email\" roundedLeft=\"0\" placeholder=\"email@emisha.com.mx\" isRequired/>\n                </InputGroup>\n                <InputGroup>\n                  <InputLeftAddon backgroundColor=\"teal.100\" children={<Icon name=\"lock\" color=\"teal.700\" />} />\n                  <Input name=\"password\" value={context.state.formLogin.password} onChange={(e) => context.handleInput(e, 'formLogin')} color=\"teal.700\" type=\"password\" rounded=\"0\" placeholder=\"contraseña\" isRequired/>\n                </InputGroup>\n                <br />\n                <Button type=\"submit\" minWidth=\"150px\" alignSelf=\"center\" w=\"30%\" backgroundColor=\"teal.300\" color=\"teal.50\" size=\"md\">\n                  Iniciar sesión\n                </Button>\n              </Stack>\n            </Box>\n          </>\n        );\n      }}\n    </MyContext.Consumer>\n  )\n}\n\n\n\n","import React, {useContext,useEffect} from 'react';\nimport {Select,Link,List,ListIcon,ListItem,Flex,Box,Heading,Button,Stack,InputGroup,InputLeftAddon,Input,Icon,useToast, SimpleGrid,Text } from \"@chakra-ui/core\";\nimport {MyContext} from '../../context'\nimport { MdBlock,MdEdit,MdVpnKey} from 'react-icons/md';\nimport { FaUser} from 'react-icons/fa';\n\n\nexport default function Usuarios({history}) {  \n    const context = useContext(MyContext)\n    useEffect(()=>{\n      if (!context.state.isLogged) return history.push('/')\n    })\n    const toast = useToast()\n    const {feed,edita,nuevo}= context.state\n    const submitUser = async (e) => {\n        const { user, msg } = await context.handleSignupSubmit(e)\n        if (user) {\n            toast({\n                position:\"top-left\",\n                title: \"Cuenta creada\",\n                description: msg,\n                status: \"success\",\n                duration: 4000,\n                isClosable: true,\n              })\n        } else {\n          toast({\n            position:\"top-left\",\n            title: 'Cuenta no creada',\n            description: msg,\n            status: 'error',\n            duration: 4000,\n            isClosable: true\n          })\n        }\n      }\n    const deleteUser = async (e,id)=>{\n      await context.deleteUser(e,id)\n    } \n    const editUser = async(e,user)=>{\n      await context.editUser(e,user)\n    }\n    const showEdit=async(e,user)=>{\n      await context.showEditUser(e,user)\n    }\n    const showNuevo=async(e)=>{\n      await context.showNuevo(e)\n    }\n    const restorePassword = async(e,id)=>{\n      await context.restorePassword(e,id)\n    }\n    const changeStatus=async(e,id)=>{\n      await context.changeStatus(e,id)\n    }\n    const handleChange=async(e)=>{\n      await context.handleChange(e,'formUsuario')\n    }\n    \n    return (\n        <MyContext.Consumer>\n          {context => {\n            return (\n              <Flex direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\n              {!nuevo && !edita && <Button marginTop=\"15px\" onClick={showNuevo} width=\"120px\" alignSelf=\"center\" backgroundColor=\"teal.300\" color=\"teal.50\" size=\"md\">\n                      Nuevo usuario\n                    </Button>}\n                {nuevo && <Box as=\"form\" onSubmit={submitUser} display=\"flex\" h=\"60%\" justifyContent=\"center\" minWidth=\"350px\" w=\"25vw\"  p={4} color=\"white\">\n                  <Stack >\n                    <Heading as=\"h3\" size=\"md\" color=\"teal.700\">Agrega un usuario</Heading>\n                    <InputGroup>\n                      <InputLeftAddon backgroundColor=\"teal.100\" children={<Box as={FaUser} color=\"teal.700\" />} />\n                      <Input name=\"name\" value={context.state.formSignup.name} onChange={(e) => context.handleInput(e, 'formSignup')} color=\"teal.700\" type=\"text\" rounded=\"0\" placeholder=\"nombre de usuario\" isRequired/>\n                    </InputGroup>\n                    <InputGroup size=\"md\">\n                      <InputLeftAddon backgroundColor=\"teal.100\" children={<Icon name=\"email\" color=\"teal.700\" />}/>\n                      <Input name=\"email\" value={context.state.formSignup.email} onChange={(e) => context.handleInput(e, 'formSignup')} color=\"teal.700\" type=\"email\" roundedLeft=\"0\" placeholder=\"email@emisha.com.mx\" isRequired/>\n                    </InputGroup>\n        \n                    <Button type=\"submit\" minWidth=\"150px\" alignSelf=\"center\" w=\"30%\" backgroundColor=\"teal.300\" color=\"teal.50\" size=\"md\">\n                      Generar usuario\n                    </Button>\n                  </Stack>\n                </Box>}\n                {edita && <Box as=\"form\" onSubmit={(e)=>editUser(e,context.state.formUsuario.id)} display=\"flex\" h=\"60%\" justifyContent=\"center\" minWidth=\"350px\" w=\"25vw\"  p={4} color=\"white\">\n                  <Stack >\n                    <Heading as=\"h3\" size=\"md\" color=\"teal.700\">Editar</Heading>\n                    <InputGroup>\n                      <InputLeftAddon backgroundColor=\"teal.100\" children={<Box as={FaUser} color=\"teal.700\" />} />\n                      <Input name=\"name\" value={context.state.formUsuario.name} onChange={(e) => context.handleInput(e, 'formUsuario')} color=\"teal.700\" type=\"text\" rounded=\"0\" placeholder=\"nombre de usuario\" isRequired/>\n                    </InputGroup>\n                    <InputGroup size=\"md\">\n                      <InputLeftAddon backgroundColor=\"teal.100\" children={<Icon name=\"email\" color=\"teal.700\" />}/>\n                      <Input name=\"email\" value={context.state.formUsuario.email} onChange={(e) => context.handleInput(e, 'formUsuario')} color=\"teal.700\" type=\"email\" roundedLeft=\"0\" placeholder=\"email@emisha.com.mx\" isRequired/>\n                    </InputGroup>\n                    <Select color=\"teal.700\" name=\"rol\" onChange={(e)=>handleChange(e)} value={context.state.formUsuario.rol}>\n                      <option value=\"Mesa\">Mesa</option>\n                      <option value=\"Admin\">Admin</option>\n                    </Select>\n        \n                    <Button type=\"submit\" minWidth=\"150px\" alignSelf=\"center\" w=\"30%\" backgroundColor=\"teal.300\" color=\"teal.50\" size=\"md\">\n                      Guardar\n                    </Button>\n                  </Stack>\n                </Box>}\n                <Box as=\"form\" display=\"flex\" flexDir=\"column\" onSubmit={submitUser} h=\"80%\" justifyContent=\"center\" minWidth=\"400px\"  maxWidth=\"9500px\" p={4} color=\"white\">\n                  <Heading as=\"h3\" size=\"md\" color=\"teal.700\">Usuarios</Heading>\n                  <List>\n                    <ListItem\n                          color=\"teal.700\"\n                        >\n                      <SimpleGrid columns={13}>\n                        <Text >Estatus</Text>\n                        <Text gridColumn=\"2/6\" >Nombre</Text>\n                        <Text gridColumn=\"6/10\">Email</Text>\n                        <Text gridColumn=\"10/11\" >Perfil</Text>\n                        <Text >Editar</Text>\n                        <Text >Borrar</Text>\n                        <Text >Reiniciar Password</Text>\n                      </SimpleGrid>\n                    </ListItem>\n                    {feed && context.state.allUsers.map((user, id) => (\n                        <ListItem\n                          key={id}\n                          color=\"teal.700\"\n                        >\n                          <SimpleGrid columns={13}>\n                            {user.isActive && <ListIcon onClick={(e)=>{changeStatus(e,user._id)} } margin=\"auto\" icon=\"check-circle\" color=\"green.500\" />}\n                            {!user.isActive && <ListIcon onClick={(e)=>{changeStatus(e,user._id)} } margin=\"auto\" icon={MdBlock} color=\"red.500\" />}\n                            <Text gridColumn=\"2/6\" isTruncated>{user.name}</Text>\n                            <Text gridColumn=\"6/10\" isTruncated>{user.email}</Text>\n                            <Text gridColumn=\"10/11\" >{user.rol}</Text>\n                            <Link onClick={(e)=>{showEdit(e,user)} }><Box margin=\"auto\" as={MdEdit}/></Link>\n                            <Link onClick={(e)=>{deleteUser(e,user._id)} }><Icon margin=\"auto\" name=\"delete\"/></Link>\n                            <Link color=\"gray.400\" onClick={(e)=>{restorePassword(e,user._id)} }><Box margin=\"auto\" as={MdVpnKey}/></Link>\n                          </SimpleGrid>\n                          </ListItem>\n\n                      ))}\n                  </List>\n                </Box>  \n              </Flex>\n            );\n          }}\n        </MyContext.Consumer>\n      )\n}\n\n\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport {\n  Flex,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Image,\n  IconButton\n} from '@chakra-ui/core'\nimport { MyContext } from '../context'\nimport { TiThMenu } from \"react-icons/ti\";\n\nfunction Navbar({ history }) {\n  const go = path => history.push(path)\n  return (\n    <MyContext.Consumer>\n      {context => {\n        return (\n          <Flex\n            pos=\"fixed\"\n            top={0}\n            zIndex=\"99\"\n            w=\"100vw\"\n            h=\"10vh\"\n            p={8}\n            align=\"center\"\n            justify=\"space-between\"\n            backgroundColor=\"teal.300\"\n          >\n            <Image h=\"9vh\"  src=\"/logo_blanco.webp\" />\n            {context.state.isLogged && (\n            <Menu>\n              <MenuButton\n                as={IconButton}\n                variant=\"outline\"\n                variantColor=\"whity\"\n                aria-label=\"Menu\"\n                size=\"lg\"\n                icon={TiThMenu}\n                border=\"none\"\n              ></MenuButton>\n              <MenuList>\n                {context.state.isAdmin && (\n                  <>\n                    <MenuItem onClick={() => go('/usuarios')}>Usuarios</MenuItem>\n                    <MenuItem onClick={() => go('/clientes')}>Clientes</MenuItem>\n                    <MenuItem onClick={() => go('/contratos')}>Contratos</MenuItem>\n                    <MenuItem onClick={context.handleLogout}>Logout</MenuItem>\n                  </>\n                )}\n                {!context.state.isAdmin && (\n                  <>\n                    <MenuItem onClick={() => go('/clientes')}>Clientes</MenuItem>\n                    <MenuItem onClick={() => go('/contratos')}>Contratos</MenuItem>\n                    <MenuItem onClick={context.handleLogout}>Logout</MenuItem>\n                  </>\n                )}\n              </MenuList>\n            </Menu>)}\n          </Flex>\n        )\n      }}\n    </MyContext.Consumer>\n  )\n}\n\nexport default withRouter(Navbar)\n","import React, {useContext,useEffect} from 'react';\nimport {Select,Link,List,ListItem,Flex,Box,Heading,Button,Stack,Input,Icon,useToast, SimpleGrid,Text,InputLeftAddon, InputGroup } from \"@chakra-ui/core\";\nimport {MyContext} from '../../context'\nimport { FaPlusCircle} from 'react-icons/fa';\nimport { MdEdit} from 'react-icons/md';\n\nexport default function Contratos({history}) {  \n    const context = useContext(MyContext)\n    const toast = useToast()\n    useEffect(()=>{\n      if (!context.state.isLogged) return history.push('/')\n    })\n    const {feed,edita,nuevo}= context.state\n    const submitContract = async (e) => {\n        const {contract,msg}= await context.createContract(e)     \n        if (contract) {\n            toast({\n                position:\"top\",\n                title: \"Contrato creado\",\n                description: msg,\n                status: \"success\",\n                duration: 4000,\n                isClosable: true,\n              })\n        } else {\n          toast({\n            position:\"top\",\n            title: 'Contrato no creado',\n            description: msg,\n            status: 'error',\n            duration: 4000,\n            isClosable: true\n          })\n        }\n      }\n    const deleteContract = async (e,id)=>{\n      await context.deleteContract(e,id)\n    } \n    const editContract = async(e,contract)=>{\n      await context.editContract(e,contract)\n    }\n    const showEdit=async(e,contract)=>{\n      await context.showEditContract(e,contract)\n    }\n    const showNuevo=async(e)=>{\n      await context.showNuevo(e)\n    }\n    const handleChange=async(e)=>{\n      await context.handleChange(e,'formContrato')\n    }\n    const showDetail=async(e,contract)=>{\n      await context.showDetailContract(e,contract)\n    }\n    \n    return (\n        <MyContext.Consumer>\n          {context => {\n            return (\n              <Flex direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\n              {!nuevo && !edita && <Button marginTop=\"15px\" onClick={showNuevo} width=\"170px\" alignSelf=\"center\" backgroundColor=\"teal.300\" color=\"teal.50\" size=\"md\">\n                      Agregar contrato\n                    </Button>}\n                {nuevo && <Box as=\"form\" onSubmit={submitContract} display=\"flex\" h=\"60%\" justifyContent=\"center\" minWidth=\"350px\" w=\"25vw\"  p={4} color=\"white\">\n                  <Stack >\n                    <Heading as=\"h3\" size=\"md\" color=\"teal.700\">Agrega un contrato</Heading>\n                    <Text w=\"80px\" color=\"teal.700\">Cliente:</Text>\n                    <Select color=\"teal.700\" name=\"idcliente\" onChange={(e)=>handleChange(e)}>\n                      <option >Selecciona un cliente</option>\n                      {context.state.allClients.map((cliente,indx)=>{\n                          return <option key={indx} value={cliente._id}>{cliente.nombre} {cliente.apellidoPaterno} {cliente.apellidoMaterno}</option>\n                      })\n                      }\n                    </Select>\n\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Monto\" color=\"teal.700\" />\n                    <Input placeholder=\"Monto\" name=\"monto\" type=\"number\" value={context.state.formContrato.monto} onChange={(e) => context.handleInput(e, 'formContrato')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Plazo\" color=\"teal.700\" />\n                    <Input placeholder=\"Plazo\" name=\"plazo\" type=\"number\" value={context.state.formContrato.plazo} onChange={(e) => context.handleInput(e, 'formContrato')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Tasa\" color=\"teal.700\" />\n                    <Input placeholder=\"Tasa\" name=\"tasa\" type=\"number\" value={context.state.formContrato.tasa} onChange={(e) => context.handleInput(e, 'formContrato')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Fecha inicio\" color=\"teal.700\" />\n                    <Input placeholder=\"Fecha inicio\" name=\"fechaInicio\" type=\"date\" value={context.state.formContrato.fechaInicio} onChange={(e) => context.handleInput(e, 'formContrato')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup display=\"flex\" flexDirection=\"row\" height=\"fit-content\">\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Día pago\" color=\"teal.700\" />\n                    <Input placeholder=\"Día de pago\" name=\"diaPago\" type=\"number\" value={context.state.formContrato.diaPago} onChange={(e) => context.handleInput(e, 'formContrato')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <Button type=\"submit\" minWidth=\"150px\" alignSelf=\"center\" w=\"30%\" backgroundColor=\"teal.300\" color=\"teal.50\" size=\"md\">\n                      Crear contrato\n                    </Button>\n                  </Stack>\n                </Box>}\n                {edita && <Box as=\"form\" onSubmit={(e)=>editContract(e,context.state.formContrato.id)} display=\"flex\" h=\"60%\" justifyContent=\"center\" minWidth=\"350px\" w=\"25vw\"  p={4} color=\"white\">\n                <Stack >\n                    <Heading as=\"h3\" size=\"md\" color=\"teal.700\">Editar</Heading>\n\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Monto\" color=\"teal.700\" />\n                    <Input placeholder=\"Monto\" name=\"monto\" type=\"number\" value={context.state.formContrato.monto} onChange={(e) => context.handleInput(e, 'formContrato')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Plazo\" color=\"teal.700\" />\n                    <Input placeholder=\"Plazo\" name=\"plazo\" type=\"number\" value={context.state.formContrato.plazo} onChange={(e) => context.handleInput(e, 'formContrato')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Tasa\" color=\"teal.700\" />\n                    <Input placeholder=\"Tasa\" name=\"tasa\" type=\"number\" value={context.state.formContrato.tasa} onChange={(e) => context.handleInput(e, 'formContrato')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup display=\"flex\" flexDirection=\"row\" height=\"fit-content\">\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Día pago\" color=\"teal.700\" />\n                    <Input placeholder=\"Día de pago\" name=\"diaPago\" type=\"number\" value={context.state.formContrato.diaPago} onChange={(e) => context.handleInput(e, 'formContrato')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    \n                    <Text w=\"80px\" color=\"teal.700\">Estatus:</Text>\n                    <Select color=\"teal.700\" name=\"estatus\" onChange={(e)=>handleChange(e)} value={context.state.formContrato.estatus}>\n                      <option value=\"Activo\" >Activo</option>\n                      <option value=\"Dacion\" >Dación</option>\n                      <option value=\"Quebranto\" >Quebranto</option>\n                      <option value=\"Siniestro\" >Siniestro</option>\n                      <option value=\"Terminado\" >Terminado</option>\n                    </Select>\n                    <Button type=\"submit\" minWidth=\"150px\" alignSelf=\"center\" w=\"30%\" backgroundColor=\"teal.300\" color=\"teal.50\" size=\"md\">\n                      Guardar\n                    </Button>\n                  </Stack>\n                </Box>}\n                <Box as=\"form\" display=\"flex\" flexDir=\"column\" onSubmit={submitContract} h=\"80%\" justifyContent=\"center\" minWidth=\"400px\"  maxWidth=\"9500px\" p={4} color=\"white\">\n                  <Heading as=\"h3\" size=\"md\" color=\"teal.700\">Contratos</Heading>\n                  <List>\n                    <ListItem\n                          color=\"teal.700\"\n                        >\n                      <SimpleGrid columns={11}>\n                        <Text >No. Contrato</Text>\n                        <Text gridColumn=\"2/4\" >Cliente</Text>\n                        <Text >Monto</Text>\n                        <Text >Plazo</Text>\n                        <Text >Tasa</Text>\n                        <Text >Mensualidad</Text>\n                        <Text >Detalle</Text>\n                        <Text >Editar</Text>\n                        <Text >Borrar</Text>\n                      </SimpleGrid>\n                    </ListItem>\n                    {feed && context.state.allContracts.map((contract, id) => (\n                        <ListItem\n                          key={id}\n                          color=\"teal.700\"\n                        >\n                          <SimpleGrid columns={11}>\n                            <Text >{contract.numeroContrato}</Text>\n                            <Text gridColumn=\"2/4\" isTruncated >{contract.cliente.nombre} {contract.cliente.apellidoPaterno} {contract.cliente.apellidoMaterno}</Text>\n                            <Text >{contract.monto}</Text>\n                            <Text >{contract.plazo}</Text>\n                            <Text >{contract.tasa}</Text>\n                            <Text>{contract.mensualidad}</Text>\n                            <Link onClick={(e)=>{showDetail(e,contract)} }><Box margin=\"auto\" as={FaPlusCircle}/></Link>\n                            <Link onClick={(e)=>{showEdit(e,contract)} }><Box margin=\"auto\" as={MdEdit}/></Link>\n                            <Link onClick={(e)=>{deleteContract(e,contract._id)} }><Icon margin=\"auto\" name=\"delete\"/></Link>\n                          </SimpleGrid>\n                          </ListItem>\n\n                      ))}\n                  </List>\n                </Box>  \n              </Flex>\n            );\n          }}\n        </MyContext.Consumer>\n      )\n}\n\n\n","import React, {useContext,useEffect} from 'react';\nimport {Select,Link,List,ListItem,Flex,Box,Heading,Button,Stack,Input,Icon,useToast, SimpleGrid,Text,InputLeftAddon, InputGroup } from \"@chakra-ui/core\";\nimport {MyContext} from '../../context'\nimport { MdEdit} from 'react-icons/md';\n\nexport default function Clientes({history}) {  \n    const context = useContext(MyContext)\n    const toast = useToast()\n    useEffect(()=>{\n      if (!context.state.isLogged) return history.push('/')\n    })\n    const {feed,edita,nuevo}= context.state\n    const submitClient = async (e) => {\n        const {client,msg}= await context.createClient(e)     \n        if (client) {\n            toast({\n                position:\"top\",\n                title: \"Cliente creado\",\n                description: msg,\n                status: \"success\",\n                duration: 4000,\n                isClosable: true,\n              })\n        } else {\n          toast({\n            position:\"top\",\n            title: 'Cliente no creado',\n            description: msg,\n            status: 'error',\n            duration: 4000,\n            isClosable: true\n          })\n        }\n      }\n    const deleteClient = async (e,id)=>{\n      await context.deleteClient(e,id)\n    } \n    const editClient = async(e,client)=>{\n      await context.editClient(e,client)\n    }\n    const showEdit=async(e,client)=>{\n      await context.showEditClient(e,client)\n    }\n    const showNuevo=async(e)=>{\n      await context.showNuevo(e)\n    }\n    const handleChange=async(e)=>{\n      await context.handleChange(e,'formCliente')\n    }\n    \n    return (\n        <MyContext.Consumer>\n          {context => {\n            return (\n              <Flex direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\n              {!nuevo && !edita && <Button marginTop=\"15px\" onClick={showNuevo} width=\"170px\" alignSelf=\"center\" backgroundColor=\"teal.300\" color=\"teal.50\" size=\"md\">\n                      Agregar cliente\n                    </Button>}\n                {nuevo && <Box as=\"form\" onSubmit={submitClient} display=\"flex\" h=\"60%\" justifyContent=\"center\" minWidth=\"350px\" w=\"25vw\"  p={4} color=\"white\">\n                  <Stack >\n                    <Heading as=\"h3\" size=\"md\" color=\"teal.700\">Agrega un cliente</Heading>\n                    \n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Nombre\" color=\"teal.700\" />\n                    <Input placeholder=\"Nombre\" name=\"nombre\" type=\"text\" value={context.state.formCliente.nombre} onChange={(e) => context.handleInput(e, 'formCliente')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Ap. Paterno\" color=\"teal.700\" />\n                    <Input placeholder=\"Apellido Paterno\" name=\"apellidoPaterno\" type=\"text\" value={context.state.formCliente.apellidoPaterno} onChange={(e) => context.handleInput(e, 'formCliente')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Ap. Materno\" color=\"teal.700\" />\n                    <Input placeholder=\"Apellido Materno\" name=\"apellidoMaterno\" type=\"text\" value={context.state.formCliente.apellidoMaterno} onChange={(e) => context.handleInput(e, 'formCliente')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"RFC\" color=\"teal.700\" />\n                    <Input placeholder=\"RFC\" name=\"rfc\" type=\"text\" value={context.state.formCliente.rfc} onChange={(e) => context.handleInput(e, 'formCliente')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"CURP\" color=\"teal.700\" />\n                    <Input placeholder=\"CURP\" name=\"curp\" type=\"text\" value={context.state.formCliente.curp} onChange={(e) => context.handleInput(e, 'formCliente')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"No. Cliente\" color=\"teal.700\" />\n                    <Input placeholder=\"Número de cliente\" name=\"numCliente\" type=\"text\" value={context.state.formCliente.numCliente} onChange={(e) => context.handleInput(e, 'formCliente')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <Select color=\"teal.700\" name=\"genero\" onChange={(e)=>handleChange(e)}>\n                      <option >Selecciona tu género</option>\n                      <option value=\"Femenino\">Femenino</option>\n                      <option value=\"Masculino\">Masculino</option>\n                      <option value=\"Indefinido\">Indefinido</option>\n                  \n                    </Select>\n                    <Button type=\"submit\" minWidth=\"150px\" alignSelf=\"center\" w=\"30%\" backgroundColor=\"teal.300\" color=\"teal.50\" size=\"md\">\n                      Crear cliente\n                    </Button>\n                  </Stack>\n                </Box>}\n                {edita && <Box as=\"form\" onSubmit={(e)=>editClient(e,context.state.formCliente.id)} display=\"flex\" h=\"60%\" justifyContent=\"center\" minWidth=\"350px\" w=\"25vw\"  p={4} color=\"white\">\n                <Stack >\n                    <Heading as=\"h3\" size=\"md\" color=\"teal.700\">Editar</Heading>\n                    \n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Nombre\" color=\"teal.700\" />\n                    <Input placeholder=\"Nombre\" name=\"nombre\" type=\"text\" value={context.state.formCliente.nombre} onChange={(e) => context.handleInput(e, 'formCliente')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Ap. Paterno\" color=\"teal.700\" />\n                    <Input placeholder=\"Apellido Paterno\" name=\"apellidoPaterno\" type=\"text\" value={context.state.formCliente.apellidoPaterno} onChange={(e) => context.handleInput(e, 'formCliente')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"Ap. Materno\" color=\"teal.700\" />\n                    <Input placeholder=\"Apellido Materno\" name=\"apellidoMaterno\" type=\"text\" value={context.state.formCliente.apellidoMaterno} onChange={(e) => context.handleInput(e, 'formCliente')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"RFC\" color=\"teal.700\" />\n                    <Input placeholder=\"RFC\" name=\"rfc\" type=\"text\" value={context.state.formCliente.rfc} onChange={(e) => context.handleInput(e, 'formCliente')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"CURP\" color=\"teal.700\" />\n                    <Input placeholder=\"CURP\" name=\"curp\" type=\"text\" value={context.state.formCliente.curp} onChange={(e) => context.handleInput(e, 'formCliente')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputLeftAddon w=\"120px\" backgroundColor=\"teal.100\" children=\"No. Cliente\" color=\"teal.700\" />\n                    <Input placeholder=\"Número de cliente\" name=\"numCliente\" type=\"text\" value={context.state.formCliente.numCliente} onChange={(e) => context.handleInput(e, 'formCliente')} color=\"teal.700\" rounded=\"2\" isRequired/>\n                    </InputGroup>\n                    <Select color=\"teal.700\" name=\"genero\" value={context.state.formCliente.genero} onChange={(e)=>handleChange(e)}>\n                      <option >Selecciona tu género</option>\n                      <option value=\"Femenino\">Femenino</option>\n                      <option value=\"Masculino\">Masculino</option>\n                      <option value=\"Indefinido\">Indefinido</option>\n                    </Select>\n\n                    <Button type=\"submit\" minWidth=\"150px\" alignSelf=\"center\" w=\"30%\" backgroundColor=\"teal.300\" color=\"teal.50\" size=\"md\">\n                      Guardar\n                    </Button>\n                  </Stack>\n                </Box>}\n                <Box as=\"form\" display=\"flex\" flexDir=\"column\" onSubmit={submitClient} h=\"80%\" justifyContent=\"center\" minWidth=\"400px\"  maxWidth=\"9500px\" p={4} color=\"white\">\n                  <Heading as=\"h3\" size=\"md\" color=\"teal.700\">Clientes</Heading>\n                  <List>\n                    <ListItem\n                          color=\"teal.700\"\n                        >\n                      <SimpleGrid columns={9}>\n                        <Text >Nombre</Text>\n                        <Text >Apellido Paterno</Text>\n                        <Text >Apellido Materno</Text>\n                        <Text >No. Cliente</Text>\n                        <Text >RFC</Text>\n                        <Text >CURP</Text>\n                        <Text >Genero</Text>\n                        <Text >Editar</Text>\n                        <Text >Borrar</Text>\n                      </SimpleGrid>\n                    </ListItem>\n                    {feed && context.state.allClients.map((client, id) => (\n                        <ListItem\n                          key={id}\n                          color=\"teal.700\"\n                        >\n                          <SimpleGrid columns={9}>\n                            <Text >{client.nombre}</Text>\n                            <Text >{client.apellidoPaterno}</Text>\n                            <Text >{client.apellidoMaterno}</Text>\n                            <Text >{client.numCliente}</Text>\n                            <Text >{client.rfc}</Text>\n                            <Text>{client.curp}</Text>\n                            <Text >{client.genero}</Text>\n                            <Link onClick={(e)=>{showEdit(e,client)} }><Box margin=\"auto\" as={MdEdit}/></Link>\n                            <Link onClick={(e)=>{deleteClient(e,client._id)} }><Icon margin=\"auto\" name=\"delete\"/></Link>\n                          </SimpleGrid>\n                          </ListItem>\n\n                      ))}\n                  </List>\n                </Box>  \n              </Flex>\n            );\n          }}\n        </MyContext.Consumer>\n      )\n}\n\n\n\n","import React, {useContext,useEffect} from 'react';\nimport {List,ListItem,Flex,Box,Heading, SimpleGrid,Text } from \"@chakra-ui/core\";\nimport {MyContext} from '../../context'\n\nexport default function DetalleContrato({history}) {  \n    const context = useContext(MyContext)\n    const {feed}= context.state\n    useEffect(()=>{\n      if (!context.state.isLogged) return history.push('/')\n    })\n    const contract=context.state.contratoDetalle\n    return (\n        <MyContext.Consumer>\n          {context => {\n            return (\n              <Flex wrap=\"wrap\" justifyContent=\"center\">\n                {feed && <Box display=\"flex\" flexDir=\"column\"  h=\"80%\" justifyContent=\"center\" minWidth=\"400px\"  maxWidth=\"9500px\" p={4} color=\"white\">\n                  <Heading as=\"h3\" size=\"md\" color=\"teal.700\">Detalle Contrato</Heading>\n                  <List>\n                    <ListItem\n                          color=\"teal.700\"\n                        >\n                      <SimpleGrid columns={11}>\n                        <Text gridColumn=\"1/3\">No. Contrato</Text>\n                        <Text gridColumn=\"3/5\" >Cliente</Text>\n                        <Text >Monto</Text>\n                        <Text >Plazo</Text>\n                        <Text >Tasa</Text>\n                        <Text >Estatus</Text>\n                        <Text gridColumn=\"9/11\">Mensualidad</Text>\n                        <Text >Primer Pago</Text>\n                      </SimpleGrid>\n                    </ListItem>\n                        <ListItem color=\"teal.700\">\n                      <SimpleGrid columns={11}>\n                        <Text gridColumn=\"1/3\">{contract.numeroContrato}</Text>\n                        <Text gridColumn=\"3/5\" isTruncated >{contract.cliente.nombre} {contract.cliente.apellidoPaterno} {contract.cliente.apellidoMaterno}</Text>\n                        <Text >{contract.monto}</Text>\n                        <Text >{contract.plazo}</Text>\n                        <Text >{contract.tasa}</Text>\n                        <Text >{contract.estatus}</Text>\n                        <Text gridColumn=\"9/11\">{contract.mensualidad}</Text>\n                        <Text >{contract.fechaPrimerPagoCorto}</Text>\n                      </SimpleGrid>\n                      </ListItem>\n                  </List>\n                  <Heading as=\"h4\" size=\"md\" color=\"teal.700\">Tabla Amortización</Heading>\n                  <List>\n                    <ListItem color=\"teal.700\">\n                      <SimpleGrid columns={8}>\n                        <Text>Pago</Text>\n                        <Text>Fecha Exigibilidad</Text>\n                        <Text gridColumn=\"3/4\" >Saldo Inicial</Text>\n                        <Text>Capital</Text>\n                        <Text>Interés</Text>\n                        <Text>Iva Interés</Text>\n                        <Text gridColumn=\"7/8\">Saldo Final</Text>\n                        <Text>Mensualidad</Text>\n                      </SimpleGrid>\n                    </ListItem>\n                    {contract.tablaOriginal.map((el,indx)=>(\n                      <ListItem\n                          key={indx}\n                          color=\"teal.700\"\n                        >\n                      <SimpleGrid columns={8}>\n                        <Text>{el.pago}</Text>\n                        <Text>{el.fechaExigibilidad}</Text>\n                        <Text gridColumn=\"3/4\">{el.saldoInicial}</Text>\n                        <Text>{el.capital}</Text>\n                        <Text>{el.interes}</Text>\n                        <Text>{el.ivaInteres}</Text>\n                        <Text gridColumn=\"7/8\">{el.saldoFinal}</Text>\n                        <Text>{el.mensualidad}</Text>\n                      </SimpleGrid>\n                    </ListItem>\n                    ))}\n                  </List>\n                </Box>}  \n              </Flex>\n            );\n          }}\n        </MyContext.Consumer>\n      )\n}","import React from 'react';\nimport {Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Usuarios from './pages/admin/Usuarios'\nimport NotFound from './components/404/NotFound.js';\nimport Navbar from './components/Navbar';\nimport {Box} from \"@chakra-ui/core\";\nimport Contratos from './pages/mesa/Contratos';\nimport Clientes from './pages/mesa/Clientes'\nimport DetalleContrato from './pages/mesa/DetalleContrato'\nconst Router = () => (\n  <>\n  <Navbar />\n  <Box marginTop=\"10vh\"/>\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/usuarios\" component={Usuarios} />\n      <Route exact path=\"/contratos\" component={Contratos} />\n      <Route exact path=\"/clientes\" component={Clientes}/>\n      <Route exact path=\"/detalleContrato\" component={DetalleContrato}/>\n     \n      <Route component={NotFound} />\n    </Switch>\n  </>\n);\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { theme } from '@chakra-ui/core'\n\nconst customIcons = {\n  menu: {\n    path: (\n      <path\n      fill=\"currentColor\"\n        d=\"M3.314,4.8h13.372c0.41,0,0.743-0.333,0.743-0.743c0-0.41-0.333-0.743-0.743-0.743H3.314\n\t\t\t\t\t\t\t\tc-0.41,0-0.743,0.333-0.743,0.743C2.571,4.467,2.904,4.8,3.314,4.8z M16.686,15.2H3.314c-0.41,0-0.743,0.333-0.743,0.743\n\t\t\t\t\t\t\t\ts0.333,0.743,0.743,0.743h13.372c0.41,0,0.743-0.333,0.743-0.743S17.096,15.2,16.686,15.2z M16.686,9.257H3.314\n\t\t\t\t\t\t\t\tc-0.41,0-0.743,0.333-0.743,0.743s0.333,0.743,0.743,0.743h13.372c0.41,0,0.743-0.333,0.743-0.743S17.096,9.257,16.686,9.257z\"\n      />\n    ),\n    viewBox: '0 0 20 20'\n  }\n}\n\nconst customTheme = {\n  ...theme,\n  icons: {\n    ...theme.icons,\n    ...customIcons\n  },\n  colors: {\n    ...theme.colors,\n    hotpink: {\n      '100': '#ff3465',\n      '200': '#ff3465',\n      '300': '#ff3465',\n      '400': '#ff3465',\n      '500': '#ff3465',\n      '600': '#ff3465',\n      '700': '#ff3465',\n      '800': '#ff3465',\n      '900': '#ff3465'\n    },\n    softpink: {\n      '100': '#ffdbe3',\n      '200': '#ffdbe3',\n      '300': '#ffdbe3',\n      '400': '#ffdbe3',\n      '500': '#ffdbe3',\n      '600': '#ffdbe3',\n      '700': '#ffdbe3',\n      '800': '#ffdbe3',\n      '900': '#ffdbe3'\n    },\n    whity: {\n      '100': 'white',\n      '200': 'white',\n      '300': 'white',\n      '400': 'white',\n      '500': 'white',\n      '600': 'white',\n      '700': 'white',\n      '800': 'white',\n      '900': 'white'\n    }\n  }\n}\n\nexport default customTheme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom'\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core'\nimport theme from './theme'\nimport './index.css'\nimport MyProvider from './context'\n\nReactDOM.render(\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n      <CSSReset />\n      <MyProvider>\n        <Router />\n      </MyProvider>\n    </ThemeProvider>\n    </BrowserRouter>,\n    document.getElementById('root')\n  )\n  \nserviceWorker.register();\n"],"sourceRoot":""}